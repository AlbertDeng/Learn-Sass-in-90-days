# SMACSS - Module

Module就可稱為模組的意思，  
以我自己定義SMACSS對於Module的解釋為，
`被設定成模組的CSS會是獨立的，且不該綁定在父容器上，能夠靈套用至各頁面上`
我用自己設計CSS的演化史來解釋這個原理，
當我還是菜鳥的時候，我會這樣來設計一個按鈕：  
```
//html程式碼
<div class="row">
	<input type="button" value="">
</div>
//css程式碼
.row{
	text-align: center;
}
.bottom-btn input{
	css按鈕樣式程式碼
}
```
這樣的程式碼確實能吃到樣式，  
但它的彈性就會變得非常非常得差，  

如果`.row`這個div裡面又要放其他input元素，  
而且樣式完全不一樣，你不就得CSS和HTML的架構都得全改，  
更別說專案在執行過程中，你已經設計好幾百頁HTML，   
結果又必須重新回頭去修改HTML設定，  
所以請盡量不要直接綁HTML tag，  
每次美術和我說它不會改畫面，  
那裡就一定只會有那個元素，  
我也就很開心得下了這樣的語法， 
但到後來改得機率都是高達99.9999%....OTZ，    
於是乎我就都改寫成這樣的寫法了：  

```
//html程式碼
<div class="bottom-btn">
	<input type="button" class="btn" value="">
</div>
//css程式碼
.row{
	text-align: center;
}
.btn{
	css按鈕樣式程式碼
}

```
你可以從上面的程式碼看得出來，  
我的按鈕直接指定一個class樣式，  
不依附在父元素上面，  
所以今天你要在各個頁面上套用這個按鈕樣式時，  
就只要在input上面加上btn的class就好。  

這樣就可以做到最上面所提到的觀念，也就是  
`被設定成模組的CSS會是獨立的，且不該綁定在父容器上，能夠靈活套用至各頁面上`。 


## CSS組件模組化  
組件的意思是`一個以上的HTML元素組合而成的樣式`，  
如下程式碼：
```
<!-- 不好的寫法 -->
<!-- HTML -->
<div class="box">
	<h2></h2>
	<ul>
		<li><a href=""></a></li>
		</ul>
</div>
<!-- CSS -->
.box{..}
.box h2{..}
.box ul{..}
.box li{..}
```


  


